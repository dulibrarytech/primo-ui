{"version":3,"sources":["webpack://primoExploreGoogleAnalytics/webpack/universalModuleDefinition","webpack://primoExploreGoogleAnalytics/webpack/bootstrap","webpack://primoExploreGoogleAnalytics/./src/index.js","webpack://primoExploreGoogleAnalytics/./src/js/googleAnalytics.module.js","webpack://primoExploreGoogleAnalytics/./node_modules/angulartics/src/index.js","webpack://primoExploreGoogleAnalytics/./node_modules/angulartics/src/angulartics.js","webpack://primoExploreGoogleAnalytics/./node_modules/angulartics-google-tag-manager/lib/index.js","webpack://primoExploreGoogleAnalytics/./node_modules/angulartics-google-tag-manager/lib/angulartics-google-tag-manager.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","buildConfig","_ref","externalScriptURL","inlineScript","trackingId","target","defaultCode","concat","defaultURL","externalSource","undefined","inlineCode","angular","googleAnalyticsConfig","configs","Array","isArray","map","injectGACode","forEach","_ref2","externalScriptTag","document","createElement","src","querySelector","appendChild","inlineScriptTag","type","createTextNode","e","text","analytics","angulartics","window","isCommand","element","indexOf","tagName","toLowerCase","propertyName","slice","length","substring","waitForVendorCount","waitForVendorApi","objectName","delay","containsField","registerFn","onTimeout","setTimeout","provider","vm","settings","pageTracking","autoTrackFirstPage","autoTrackVirtualPages","trackRelativePath","trackRoutes","trackStates","autoBasePath","basePath","excludedRoutes","queryKeysWhitelisted","queryKeysBlacklisted","filterUrlSegments","eventTracking","bufferFlushDelay","trackExceptions","optOut","developerMode","knownHandlers","cache","handlers","handlerOptions","updateHandlers","handlerName","fn","options","push","handlerArgs","apply","arguments","$inject","$q","all","handlerFn","async","deferred","defer","currentArgs","copy","unshift","resolve","promise","when","api","setOptOut","triggerRegister","getOptOut","$get","$injector","apiWithInjector","virtualPageviews","excludeRoutes","routes","queryKeysWhitelist","keys","queryKeysBlacklist","filters","firstPageview","withBase","find","attr","withAutoBase","register","handlerSettings","handlerDelay","args","index","injector","extend","invoke","installHandlerRegisterFunction","registerName","replace","match","toUpperCase","bufferedHandler","startRegistering","_provider","_knownHandlers","_installHandlerRegisterFunction","run","$rootScope","$window","$analytics","filterQueryString","url","keysMatchArr","thisType","test","urlArr","split","urlBase","pairs","matchedPairs","listedKey","j","RegExp","matchedPairsArr","a1","a2","result","arrayDifference","join","pageTrack","$location","excludedRoute","matchesExcludedRoute","segmentFiltersArr","segments","segmentFilter","blacklistQueryString","whitelistQueryString","noRoutesOrStates","has","$route","route","$state","location","pathname","absUrl","$on","event","current","$$route","redirectTo","$transitions","onSuccess","$transition$","transitionOptions","notify","directive","restrict","link","$scope","$element","$attrs","eventType","analyticsOn","trackingData","$attr","substr","isProperty","$observe","on","$event","eventName","analyticsEvent","innerText","id","analyticsIf","$eval","analyticsProperties","eventTrack","config","$provide","decorator","$delegate","error","cause","exceptionTrack","$analyticsProvider","ga","userId","registerPageTrack","path","dataLayer","content-name","registerEventTrack","action","properties","category","target-properties","label","interaction-type","noninteraction","registerSetUsername"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"primoExploreGoogleAnalytics\"] = factory();\n\telse\n\t\troot[\"primoExploreGoogleAnalytics\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","require('./js/googleAnalytics.module.js');\nmodule.exports = 'googleAnalytics';\n","import \"angulartics\";\nimport \"angulartics-google-tag-manager\";\n\nfunction buildConfig({ externalScriptURL, inlineScript, trackingId, target }) {\n  const defaultCode = `window.dataLayer = window.dataLayer || [];\n                          function gtag(){dataLayer.push(arguments);}\n                          gtag('js', new Date());\n                          gtag('config', '${trackingId}');`;\n  const defaultURL = `https://www.googletagmanager.com/gtag/js?id=${trackingId}`;\n\n  return {\n    externalSource: externalScriptURL === undefined ? defaultURL : externalScriptURL,\n    inlineCode: inlineScript || defaultCode,\n    target: target || 'head',\n  };\n}\n\nangular\n  .module('googleAnalytics', [\"angulartics\", \"angulartics.google.tagmanager\"])\n  .factory('gaInjectionService', ['googleAnalyticsConfig', function(googleAnalyticsConfig) {\n\n    const configs = Array.isArray(googleAnalyticsConfig) ?\n      googleAnalyticsConfig.map(buildConfig)\n      : [googleAnalyticsConfig].map(buildConfig);\n\n    return ({\n      injectGACode: () => {\n        configs.forEach(({ externalSource, inlineCode, target }) => {\n          if (externalSource !== null) {\n            const externalScriptTag = document.createElement('script');\n            externalScriptTag.src = externalSource;\n            document.querySelector(target).appendChild(externalScriptTag);\n          }\n\n          const inlineScriptTag = document.createElement('script');\n          inlineScriptTag.type = 'text/javascript';\n\n          // Methods of adding inner text sometimes don't work across browsers.\n          try {\n            inlineScriptTag.appendChild(document.createTextNode(inlineCode));\n          } catch (e) {\n            inlineScriptTag.text = inlineCode;\n          }\n\n          document.querySelector(target).appendChild(inlineScriptTag);\n        });\n      },\n    });\n  }]);\n","require('./angulartics');\nmodule.exports = 'angulartics';\n","/**\n * @license Angulartics\n * (c) 2013 Luis Farzati http://angulartics.github.io/\n * License: MIT\n */\n(function(angular, analytics) {\n'use strict';\n\nvar angulartics = window.angulartics || (window.angulartics = {});\nangulartics.waitForVendorCount = 0;\nangulartics.waitForVendorApi = function (objectName, delay, containsField, registerFn, onTimeout) {\n  if (!onTimeout) { angulartics.waitForVendorCount++; }\n  if (!registerFn) { registerFn = containsField; containsField = undefined; }\n  if (!Object.prototype.hasOwnProperty.call(window, objectName) || (containsField !== undefined && window[objectName][containsField] === undefined)) {\n    setTimeout(function () { angulartics.waitForVendorApi(objectName, delay, containsField, registerFn, true); }, delay);\n  }\n  else {\n    angulartics.waitForVendorCount--;\n    registerFn(window[objectName]);\n  }\n};\n\n/**\n * @ngdoc overview\n * @name angulartics\n */\nangular.module('angulartics', [])\n.provider('$analytics', $analytics)\n.run(['$rootScope', '$window', '$analytics', '$injector', $analyticsRun])\n.directive('analyticsOn', ['$analytics', analyticsOn])\n.config(['$provide', exceptionTrack]);\n\nfunction $analytics() {\n  var vm = this;\n\n  var settings = {\n    pageTracking: {\n      autoTrackFirstPage: true,\n      autoTrackVirtualPages: true,\n      trackRelativePath: false,\n      trackRoutes: true,\n      trackStates: true,\n      autoBasePath: false,\n      basePath: '',\n      excludedRoutes: [],\n      queryKeysWhitelisted: [],\n      queryKeysBlacklisted: [],\n      filterUrlSegments: []\n    },\n    eventTracking: {},\n    bufferFlushDelay: 1000, // Support only one configuration for buffer flush delay to simplify buffering\n    trackExceptions: false,\n    optOut: false,\n    developerMode: false // Prevent sending data in local/development environment\n  };\n\n  // List of known handlers that plugins can register themselves for\n  var knownHandlers = [\n    'pageTrack',\n    'eventTrack',\n    'exceptionTrack',\n    'transactionTrack',\n    'setAlias',\n    'setUsername',\n    'setUserProperties',\n    'setUserPropertiesOnce',\n    'setSuperProperties',\n    'setSuperPropertiesOnce',\n    'incrementProperty',\n    'userTimings',\n    'clearCookies'\n  ];\n  // Cache and handler properties will match values in 'knownHandlers' as the buffering functons are installed.\n  var cache = {};\n  var handlers = {};\n  var handlerOptions = {};\n\n  // General buffering handler\n  function bufferedHandler(handlerName){\n    return function(){\n      if(angulartics.waitForVendorCount){\n        if(!cache[handlerName]){ cache[handlerName] = []; }\n        cache[handlerName].push(arguments);\n      }\n    };\n  }\n\n  // As handlers are installed by plugins, they get pushed into a list and invoked in order.\n  function updateHandlers(handlerName, fn, options){\n    if(!handlers[handlerName]){\n      handlers[handlerName] = [];\n    }\n    handlers[handlerName].push(fn);\n    handlerOptions[fn] = options;\n    return function(){\n      if(!this.settings.optOut) {\n        var handlerArgs = Array.prototype.slice.apply(arguments);\n        return this.$inject(['$q', angular.bind(this, function($q) {\n          return $q.all(handlers[handlerName].map(function(handlerFn) {\n            var options = handlerOptions[handlerFn] || {};\n            if (options.async) {\n              var deferred = $q.defer();\n              var currentArgs = angular.copy(handlerArgs);\n              currentArgs.unshift(deferred.resolve);\n              handlerFn.apply(this, currentArgs);\n              return deferred.promise;\n            } else{\n              return $q.when(handlerFn.apply(this, handlerArgs));\n            }\n          }, this));\n        })]);\n      }\n    };\n  }\n\n  // The api (returned by this provider) gets populated with handlers below.\n  var api = {\n    settings: settings\n  };\n\n  // Opt in and opt out functions\n  api.setOptOut = function(optOut) {\n    this.settings.optOut = optOut;\n    triggerRegister();\n  };\n\n  api.getOptOut = function() {\n    return this.settings.optOut;\n  };\n\n\n  // Will run setTimeout if delay is > 0\n  // Runs immediately if no delay to make sure cache/buffer is flushed before anything else.\n  // Plugins should take care to register handlers by order of precedence.\n  function onTimeout(fn, delay){\n    if(delay){\n      setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n  }\n\n  var provider = {\n    $get: ['$injector', function($injector) {\n      return apiWithInjector($injector);\n    }],\n    api: api,\n    settings: settings,\n    virtualPageviews: function (value) { this.settings.pageTracking.autoTrackVirtualPages = value; },\n    trackStates: function (value) { this.settings.pageTracking.trackStates = value; },\n    trackRoutes: function (value) { this.settings.pageTracking.trackRoutes = value; },\n    excludeRoutes: function(routes) { this.settings.pageTracking.excludedRoutes = routes; },\n    queryKeysWhitelist: function(keys) { this.settings.pageTracking.queryKeysWhitelisted = keys; },\n    queryKeysBlacklist: function(keys) { this.settings.pageTracking.queryKeysBlacklisted = keys; },\n    filterUrlSegments: function(filters) { this.settings.pageTracking.filterUrlSegments = filters; },\n    firstPageview: function (value) { this.settings.pageTracking.autoTrackFirstPage = value; },\n    withBase: function (value) {\n      this.settings.pageTracking.basePath = (value) ? angular.element(document).find('base').attr('href') : '';\n    },\n    withAutoBase: function (value) { this.settings.pageTracking.autoBasePath = value; },\n    trackExceptions: function (value) { this.settings.trackExceptions = value; },\n    developerMode: function(value) { this.settings.developerMode = value; }\n  };\n\n  // General function to register plugin handlers. Flushes buffers immediately upon registration according to the specified delay.\n  function register(handlerName, fn, options){\n    // Do not add a handler if developerMode is true\n    if (settings.developerMode) {\n        return;\n    }\n    api[handlerName] = updateHandlers(handlerName, fn, options);\n    var handlerSettings = settings[handlerName];\n    var handlerDelay = (handlerSettings) ? handlerSettings.bufferFlushDelay : null;\n    var delay = (handlerDelay !== null) ? handlerDelay : settings.bufferFlushDelay;\n    angular.forEach(cache[handlerName], function (args, index) {\n      onTimeout(function () { fn.apply(this, args); }, index * delay);\n    });\n  }\n\n  function capitalize(input) {\n      return input.replace(/^./, function (match) {\n          return match.toUpperCase();\n      });\n  }\n\n  //provide a method to inject services into handlers\n  var apiWithInjector = function(injector) {\n    return angular.extend(api, {\n      '$inject': injector.invoke\n    });\n  };\n\n  // Adds to the provider a 'register#{handlerName}' function that manages multiple plugins and buffer flushing.\n  function installHandlerRegisterFunction(handlerName){\n    var registerName = 'register'+capitalize(handlerName);\n    provider[registerName] = function(fn, options){\n      register(handlerName, fn, options);\n    };\n    api[handlerName] = updateHandlers(handlerName, bufferedHandler(handlerName));\n  }\n\n  function startRegistering(_provider, _knownHandlers, _installHandlerRegisterFunction) {\n    angular.forEach(_knownHandlers, _installHandlerRegisterFunction);\n\n    for (var key in _provider) {\n      vm[key] = _provider[key];\n    }\n  }\n\n  // Allow $angulartics to trigger the register to update opt in/out\n  var triggerRegister = function() {\n    startRegistering(provider, knownHandlers, installHandlerRegisterFunction);\n  };\n\n  // Initial register\n  startRegistering(provider, knownHandlers, installHandlerRegisterFunction);\n\n}\n\nfunction $analyticsRun($rootScope, $window, $analytics, $injector) {\n\n  function matchesExcludedRoute(url) {\n    for (var i = 0; i < $analytics.settings.pageTracking.excludedRoutes.length; i++) {\n      var excludedRoute = $analytics.settings.pageTracking.excludedRoutes[i];\n      if ((excludedRoute instanceof RegExp && excludedRoute.test(url)) || url.indexOf(excludedRoute) > -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function arrayDifference(a1, a2) {\n    var result = [];\n    for (var i = 0; i < a1.length; i++) {\n      if (a2.indexOf(a1[i]) === -1) {\n        result.push(a1[i]);\n      }\n    }\n    return result;\n  }\n\n  function filterQueryString(url, keysMatchArr, thisType){\n    if (/\\?/.test(url) && keysMatchArr.length > 0) {\n      var urlArr = url.split('?');\n      var urlBase = urlArr[0];\n      var pairs = urlArr[1].split('&');\n      var matchedPairs = [];\n\n      for (var i = 0; i < keysMatchArr.length; i++) {\n        var listedKey = keysMatchArr[i];\n        for (var j = 0; j < pairs.length; j++) {\n          if ((listedKey instanceof RegExp && listedKey.test(pairs[j])) || pairs[j].indexOf(listedKey) > -1) matchedPairs.push(pairs[j]);\n        }\n      }\n\n      var matchedPairsArr = (thisType == 'white' ? matchedPairs : arrayDifference(pairs,matchedPairs));\n      if(matchedPairsArr.length > 0){\n        return urlBase + '?' + matchedPairsArr.join('&');\n      }else{\n        return urlBase;\n      }\n    } else {\n      return url;\n    }\n  }\n\n  function whitelistQueryString(url){\n    return filterQueryString(url, $analytics.settings.pageTracking.queryKeysWhitelisted, 'white');\n  }\n\n  function blacklistQueryString(url){\n    return filterQueryString(url, $analytics.settings.pageTracking.queryKeysBlacklisted, 'black');\n  }\n\n  function filterUrlSegments(url){\n    var segmentFiltersArr = $analytics.settings.pageTracking.filterUrlSegments;\n\n    if (segmentFiltersArr.length > 0) {\n      var urlArr = url.split('?');\n      var urlBase = urlArr[0];\n\n      var segments = urlBase.split('/');\n\n      for (var i = 0; i < segmentFiltersArr.length; i++) {\n        var segmentFilter = segmentFiltersArr[i];\n\n        for (var j = 1; j < segments.length; j++) {\n          /* First segment will be host/protocol or base path. */\n          if ((segmentFilter instanceof RegExp && segmentFilter.test(segments[j])) || segments[j].indexOf(segmentFilter) > -1) {\n            segments[j] = 'FILTERED';\n          }\n        }\n      }\n\n      return segments.join('/');\n    } else {\n      return url;\n    }\n  }\n\n  function pageTrack(url, $location) {\n    if (!matchesExcludedRoute(url)) {\n      url = whitelistQueryString(url);\n      url = blacklistQueryString(url);\n      url = filterUrlSegments(url);\n      $analytics.pageTrack(url, $location);\n    }\n  }\n\n  if ($analytics.settings.pageTracking.autoTrackFirstPage) {\n    /* Only track the 'first page' if there are no routes or states on the page */\n    var noRoutesOrStates = true;\n    if ($injector.has('$route')) {\n       var $route = $injector.get('$route');\n       if ($route) {\n        for (var route in $route.routes) {\n          noRoutesOrStates = false;\n          break;\n        }\n       } else if ($route === null){\n        noRoutesOrStates = false;\n       }\n    } else if ($injector.has('$state')) {\n      var $state = $injector.get('$state');\n      if ($state.get().length > 1) noRoutesOrStates = false;\n    }\n    if (noRoutesOrStates) {\n      if ($analytics.settings.pageTracking.autoBasePath) {\n        $analytics.settings.pageTracking.basePath = $window.location.pathname;\n      }\n      $injector.invoke(['$location', function ($location) {\n        if ($analytics.settings.pageTracking.trackRelativePath) {\n          var url = $analytics.settings.pageTracking.basePath + $location.url();\n          pageTrack(url, $location);\n        } else {\n          pageTrack($location.absUrl(), $location);\n        }\n      }]);\n    }\n  }\n\n  if ($analytics.settings.pageTracking.autoTrackVirtualPages) {\n    if ($analytics.settings.pageTracking.autoBasePath) {\n      /* Add the full route to the base. */\n      $analytics.settings.pageTracking.basePath = $window.location.pathname + \"#\";\n    }\n    var noRoutesOrStates = true;\n\n    if ($analytics.settings.pageTracking.trackRoutes) {\n      if ($injector.has('$route')) {\n        var $route = $injector.get('$route');\n        if ($route) {\n          for (var route in $route.routes) {\n            noRoutesOrStates = false;\n            break;\n          }\n        } else if ($route === null){\n          noRoutesOrStates = false;\n        }\n        $rootScope.$on('$routeChangeSuccess', function (event, current) {\n          if (current && (current.$$route||current).redirectTo) return;\n          $injector.invoke(['$location', function ($location) {\n            var url = $analytics.settings.pageTracking.basePath + $location.url();\n            pageTrack(url, $location);\n          }]);\n        });\n      }\n    }\n\n    if ($analytics.settings.pageTracking.trackStates) {\n      if ($injector.has('$state') && !$injector.has('$transitions')) {\n        noRoutesOrStates = false;\n        $rootScope.$on('$stateChangeSuccess', function (event, current) {\n          $injector.invoke(['$location', function ($location) {\n            var url = $analytics.settings.pageTracking.basePath + $location.url();\n            pageTrack(url, $location);\n          }]);\n        });\n      }\n      if ($injector.has('$state') && $injector.has('$transitions')) {\n        noRoutesOrStates = false;\n        $injector.invoke(['$transitions', function($transitions) {\n          $transitions.onSuccess({}, function($transition$) {\n            var transitionOptions = $transition$.options();\n\n            // only track for transitions that would have triggered $stateChangeSuccess\n            if (transitionOptions.notify) {\n              $injector.invoke(['$location', function ($location) {\n                var url = $analytics.settings.pageTracking.basePath + $location.url();\n                pageTrack(url, $location);\n              }]);\n            }\n          });\n        }]);\n      }\n    }\n\n    if (noRoutesOrStates) {\n      $rootScope.$on('$locationChangeSuccess', function (event, current) {\n        if (current && (current.$$route || current).redirectTo) return;\n        $injector.invoke(['$location', function ($location) {\n          if ($analytics.settings.pageTracking.trackRelativePath) {\n            var url = $analytics.settings.pageTracking.basePath + $location.url();\n            pageTrack(url, $location);\n          } else {\n            pageTrack($location.absUrl(), $location);\n          }\n        }]);\n      });\n    }\n  }\n  if ($analytics.settings.developerMode) {\n    angular.forEach($analytics, function(attr, name) {\n      if (typeof attr === 'function') {\n        $analytics[name] = function(){};\n      }\n    });\n  }\n}\n\nfunction analyticsOn($analytics) {\n  return {\n    restrict: 'A',\n    link: function ($scope, $element, $attrs) {\n      var eventType = $attrs.analyticsOn || 'click';\n      var trackingData = {};\n\n      angular.forEach($attrs.$attr, function(attr, name) {\n        if (isProperty(name)) {\n          trackingData[propertyName(name)] = $attrs[name];\n          $attrs.$observe(name, function(value){\n            trackingData[propertyName(name)] = value;\n          });\n        }\n      });\n\n      angular.element($element[0]).on(eventType, function ($event) {\n        var eventName = $attrs.analyticsEvent || inferEventName($element[0]);\n        trackingData.eventType = $event.type;\n\n        if($attrs.analyticsIf){\n          if(! $scope.$eval($attrs.analyticsIf)){\n            return; // Cancel this event if we don't pass the analytics-if condition\n          }\n        }\n        // Allow components to pass through an expression that gets merged on to the event properties\n        // eg. analytics-properites='myComponentScope.someConfigExpression.$analyticsProperties'\n        if($attrs.analyticsProperties){\n          angular.extend(trackingData, $scope.$eval($attrs.analyticsProperties));\n        }\n        $analytics.eventTrack(eventName, trackingData);\n      });\n    }\n  };\n}\n\nfunction exceptionTrack($provide) {\n  $provide.decorator('$exceptionHandler', ['$delegate', '$injector', function ($delegate, $injector) {\n    return function (error, cause) {\n      var result = $delegate(error, cause);\n      var $analytics = $injector.get('$analytics');\n      if ($analytics.settings.trackExceptions) {\n        $analytics.exceptionTrack(error, cause);\n      }\n      return result;\n    };\n  }]);\n}\n\nfunction isCommand(element) {\n  return ['a:','button:','button:button','button:submit','input:button','input:submit'].indexOf(\n    element.tagName.toLowerCase()+':'+(element.type||'')) >= 0;\n}\n\nfunction inferEventType(element) {\n  if (isCommand(element)) return 'click';\n  return 'click';\n}\n\nfunction inferEventName(element) {\n  if (isCommand(element)) return element.innerText || element.value;\n  return element.id || element.name || element.tagName;\n}\n\nfunction isProperty(name) {\n  return name.substr(0, 9) === 'analytics' && ['On', 'Event', 'If', 'Properties', 'EventType'].indexOf(name.substr(9)) === -1;\n}\n\nfunction propertyName(name) {\n  var s = name.slice(9); // slice off the 'analytics' prefix\n  if (typeof s !== 'undefined' && s!==null && s.length > 0) {\n    return s.substring(0, 1).toLowerCase() + s.substring(1);\n  }\n  else {\n    return s;\n  }\n}\n})(angular);\n","require('./angulartics-google-tag-manager');\nmodule.exports = 'angulartics.google.tagmanager';\n","/**\n * @license Angulartics v0.19.2\n * (c) 2013 Luis Farzati http://luisfarzati.github.io/angulartics\n * Google Tag Manager Plugin Contributed by http://github.com/danrowe49\n * License: MIT\n */\n\n(function (angular) {\n  'use strict';\n\n\n  /**\n   * @ngdoc overview\n   * @name angulartics.google.analytics\n   * Enables analytics support for Google Tag Manager (http://google.com/tagmanager)\n   */\n\n  angular.module('angulartics.google.tagmanager', ['angulartics'])\n    .config(['$analyticsProvider', function ($analyticsProvider) {\n\n      $analyticsProvider.settings.ga = {\n        userId: null\n      };\n\n      /**\n       * Send content views to the dataLayer\n       *\n       * @param {string} path Required 'content name' (string) describes the content loaded\n       */\n\n      $analyticsProvider.registerPageTrack(function (path) {\n        var dataLayer = window.dataLayer = window.dataLayer || [];\n        dataLayer.push({\n          'event': 'content-view',\n          'content-name': path,\n          'userId': $analyticsProvider.settings.ga.userId\n        });\n      });\n\n      /**\n       * Send interactions to the dataLayer, i.e. for event tracking in Google Analytics\n       * @name eventTrack\n       *\n       * @param {string} action Required 'action' (string) associated with the event\n       * @param {object} properties Comprised of the mandatory field 'category' (string) and optional  fields 'label' (string), 'value' (integer) and 'noninteraction' (boolean)\n       */\n\n      $analyticsProvider.registerEventTrack(function (action, properties) {\n        var dataLayer = window.dataLayer = window.dataLayer || [];\n        properties = properties || {};\n        dataLayer.push({\n          'event': properties.event || 'interaction',\n          'target': properties.category,\n          'action': action,\n          'target-properties': properties.label,\n          'value': properties.value,\n          'interaction-type': properties.noninteraction,\n          'userId': $analyticsProvider.settings.ga.userId\n        });\n\n      });\n\n      /**\n       * Set userId for use with Universal Analytics User ID feature\n       * @name setUsername\n       * \n       * @param {string} userId Required 'userId' value (string) used to identify user cross-device in Google Analytics\n       */\n\n      $analyticsProvider.registerSetUsername(function (userId) {\n        $analyticsProvider.settings.ga.userId = userId;\n      });\n\n    }]);\n\n})(angular);\n"],"sourceRoot":""}